#include <stdio.h>
#include <dos.h>
#include <graphics.h>
#include <conio.h>
#include <stdlib.h>
 #define w 15  //White
 #define g 10  //LightGreen
 #define c 11  //LightCyan
 #define a 14  //Yellow
 #define R 12  //LightRed
 #define M 13  //LightMagenta


void DibujeIcono(int,int,int*,int,int);
void RotarIcono(int,int,int*,int,int);
int * Network(void);
int * Desktop(void);
int * Print(void);
int * Save(void);
int * Pc (void);
int * Explorer(void);
int * CtrPanel(void);
int * Audio (void);
int * Windoc(void);
int * Help(void);
int * CdDrive(void);
int * Papelera(void);
int * Monitor(void);




void main(){
int gdriver=DETECT,gmode=0,i;
initgraph(&gdriver,&gmode,"");
DibujeIcono(445,192,Network(),16,16);
DibujeIcono(375,210,Desktop(),16,16);
 RotarIcono(395,210,Desktop(),16,16);
DibujeIcono(375,240,Print(),23,24);
 RotarIcono(405,240,Print(),23,24);
DibujeIcono(375,270,Save(),15,16);
DibujeIcono(375,300,Pc(),16,16);
DibujeIcono(375,180,Monitor(),16,16);
DibujeIcono(375,330,Explorer(),16,16);
 RotarIcono(395,330,Explorer(),16,16);
DibujeIcono(375,360,CtrPanel(),16,16);
DibujeIcono(375,390,Audio(),16,16);
DibujeIcono(375,410,Windoc(),16,16);
DibujeIcono(375,430,Help(),16,16);
DibujeIcono(445,215,CdDrive(),16,16);
 RotarIcono(465,215,CdDrive(),16,16);
DibujeIcono(395,360,Papelera(),16,16);
 RotarIcono(415,360,Papelera(),16,16);
getch();
closegraph();
}// FIN
//*********************FUNCIONES***************************************
int * Network(void){
 static int Net[16][16]={
 w,8,8,8,8,8,8,8,8,w,w,w,w,w,w,w,
 8,w,w,w,w,w,w,w,0,w,w,w,w,w,w,w,
 8,w,0,0,0,0,1,w,0,w,w,w,w,w,w,w,
 8,w,0,c,9,9,1,w,0,w,w,w,w,w,w,w,
 8,w,0,9,9,9,1,w,0,w,w,w,w,w,w,w,
 8,w,1,1,1,1,1,8,8,8,8,8,8,8,8,w,
 8,7,7,7,7,7,8,w,w,w,w,w,w,w,0,w,
 8,0,0,0,0,0,8,w,0,0,0,0,0,7,0,w,
 8,w,w,w,w,w,8,w,0,c,2,2,8,7,0,w,
 8,7,g,8,8,8,8,w,0,2,2,2,8,7,0,w,
 w,0,0,0,0,0,8,w,0,8,8,8,8,7,0,w,
 w,w,8,0,w,w,8,7,7,7,7,7,7,7,0,w,
 w,w,8,0,w,w,8,0,0,0,0,0,0,0,8,0,
 8,8,a,6,0,8,8,w,w,w,w,w,w,w,8,0,
 0,0,a,6,0,0,8,7,g,8,8,8,8,8,8,0,
 w,w,0,0,w,w,w,0,0,0,0,0,0,0,0,w,
 };
 return (int *) Net;
 }
//*****************************

int * Desktop(void){
 static int Desk[16][16]={
 w,w,w,w,w,w,w,2,0,w,w,w,w,w,w,w,
 w,w,w,w,w,w,w,2,2,0,0,w,w,w,w,w,
 w,w,w,w,w,w,w,2,2,0,w,0,0,w,w,w,
 w,w,w,w,w,w,2,c,2,2,0,w,w,0,0,w,
 w,w,w,w,w,0,0,0,0,0,0,0,w,w,w,0,
 w,w,w,w,w,w,w,w,w,w,w,w,w,w,0,w,
 w,w,w,w,w,w,w,w,w,w,w,w,w,w,0,w,
 w,w,w,w,w,w,w,w,w,w,w,w,w,0,w,w,
 w,w,8,8,8,8,8,8,8,8,8,8,8,0,8,0,
 w,w,8,7,8,w,w,0,7,6,6,7,7,7,7,0,
 w,8,7,8,w,w,w,0,7,6,a,6,6,0,7,0,
 w,8,7,8,w,w,0,7,6,a,a,a,a,0,8,0,
 8,7,0,0,0,0,0,7,0,0,0,0,0,8,8,0,
 8,w,w,w,w,w,w,w,w,w,w,w,w,8,0,w,
 8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,w,
 0,0,0,0,0,0,0,0,0,0,0,0,0,0,w,w,
 };
 return (int *) Desk;
 }

//*****************************

 int * Print(void){
  static int Printer[24][23]={
  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
  7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,
  7,7,7,7,7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,0,7,7,7,
  7,7,7,7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,w,0,7,7,7,
  7,7,7,7,7,7,7,0,w,0,0,0,0,0,0,0,0,w,w,0,7,7,7,7,
  7,7,7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,w,0,7,7,7,7,
  7,7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,w,0,0,7,7,7,7,
  7,7,7,7,7,0,w,w,0,0,0,0,0,0,0,w,w,w,0,0,0,0,0,7,
  7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,w,0,0,7,7,0,0,0,
  7,7,7,7,0,w,w,w,w,w,w,w,w,w,w,w,w,0,7,7,0,7,7,0,
  7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,
  7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,0,7,0,
  0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,0,7,7,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,
  0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,7,0,
  0,7,7,7,7,7,7,7,7,7,7,0,0,0,0,7,7,7,7,0,7,7,0,7,
  0,7,7,7,7,7,7,7,7,7,7,a,a,a,a,7,7,7,7,0,7,0,0,7,
  0,7,7,7,7,7,7,7,7,7,7,a,a,a,a,7,7,7,7,0,0,7,0,7,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,7,7,
  7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,0,7,7,7,
  7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,7,7,7,7,
  7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,
  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
  };
  return (int *) Printer;
  }
//************************
int * Save (void){
 static int Diskette[16][15]={
 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
 7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,7,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,0,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,6,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,6,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,6,0,7,
 7,0,6,0,7,7,7,7,7,7,7,7,0,6,0,7,
 7,0,6,6,0,0,0,0,0,0,0,0,6,6,0,7,
 7,0,6,6,6,6,6,6,6,6,6,6,6,6,0,7,
 7,0,6,6,0,0,0,0,0,0,0,0,0,6,0,7,
 7,0,6,6,0,0,0,0,0,0,7,7,0,6,0,7,
 7,0,6,6,0,0,0,0,0,0,7,7,0,6,0,7,
 7,0,6,6,0,0,0,0,0,0,7,7,0,6,0,7,
 7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
 };
 return (int *) Diskette;
 }
//************************
int * Pc (void){
 static int Computer[16][16]={
 w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
 w,w,w,w,w,w,8,8,8,8,8,8,8,8,w,w,
 w,w,w,w,w,8,7,7,7,7,7,7,7,8,0,w,
 w,w,w,w,8,w,w,w,w,w,w,7,8,8,0,w,
 w,w,w,w,8,w,0,0,0,0,0,7,8,8,0,w,
 w,w,w,w,8,w,0,c,2,2,8,7,8,8,0,w,
 w,w,w,w,8,w,0,2,2,2,8,7,8,8,0,w,
 w,w,w,w,8,w,0,8,8,8,8,7,8,8,0,w,
 w,w,w,w,8,w,7,7,7,7,7,7,8,0,8,8,
 w,w,w,w,8,0,0,0,0,0,0,0,0,8,7,0,
 w,w,w,8,7,7,7,7,7,7,7,7,8,7,8,0,
 w,w,w,8,0,8,0,8,0,8,0,8,0,8,8,0,
 w,w,8,0,7,0,7,0,7,0,7,0,7,0,0,w,
 w,8,w,w,w,w,w,w,w,w,w,w,7,0,w,w,
 w,0,0,0,0,0,0,0,0,0,0,0,0,w,w,w,
 w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
 };
 return (int *) Computer;
 }
//************************
int * Explorer(void){
 static int Exp[16][16]={
 w,w,8,8,8,8,8,w,w,w,w,w,w,w,w,w,
 w,8,7,a,7,a,7,8,w,w,w,w,w,w,w,w,
 8,7,a,7,a,7,a,7,8,8,8,8,8,8,w,w,
 8,w,w,w,w,w,w,w,w,w,w,w,w,6,0,w,
 8,w,a,7,8,8,0,8,a,7,a,7,a,6,0,w,
 8,w,7,8,w,c,w,0,8,a,7,a,7,6,0,w,
 8,w,8,w,c,w,c,7,0,8,a,7,a,6,0,w,
 8,w,8,c,w,c,7,c,0,6,7,a,a,6,0,w,
 8,w,8,w,c,7,c,7,0,6,a,7,a,6,0,w,
 8,w,7,8,7,c,7,0,8,6,6,a,7,6,0,w,
 8,w,a,7,8,0,0,8,7,9,9,6,a,6,0,w,
 8,6,6,6,6,6,6,6,1,c,9,9,6,6,0,w,
 w,0,0,0,0,0,0,0,0,1,c,9,9,0,w,w,
 w,w,w,w,w,w,w,w,w,w,1,c,9,9,0,w,
 w,w,w,w,w,w,w,w,w,w,w,1,c,9,0,w,
 w,w,w,w,w,w,w,w,w,w,w,w,0,0,w,w,
 };
 return (int*) Exp;
 }
//************************
int * CtrPanel(void){
 static int Panel[16][16]={
  w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
  w,w,8,8,8,8,8,w,w,w,w,w,w,w,w,w,
  w,8,7,a,7,a,7,8,w,w,w,w,w,w,w,w,
  8,7,a,7,a,7,a,7,8,8,8,8,8,8,w,w,
  8,w,w,w,w,w,w,w,w,w,w,w,w,8,0,w,
  8,w,a,7,a,7,a,7,a,8,8,0,a,8,0,w,
  8,w,7,8,7,8,8,0,7,w,8,0,7,8,0,w,
  8,w,a,8,8,7,w,w,0,7,8,0,a,8,0,w,
  8,w,7,0,8,0,7,8,0,0,0,a,7,8,0,w,
  8,w,a,7,a,7,9,0,a,R,4,7,a,8,0,w,
  8,w,7,a,7,a,9,0,7,R,4,a,7,8,0,w,
  8,w,a,7,a,7,a,7,a,7,a,7,a,8,0,w,
  8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,w,
  w,0,0,0,0,0,0,0,0,0,0,0,0,0,0,w,
  w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
  w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
 };
 return (int *) Panel;
 }
//************************
int * Audio(void){
   static int Cd[16][16]={
    w,w,0,0,w,w,w,w,w,w,w,w,w,w,w,w,
    w,w,0,0,0,0,8,8,8,8,8,w,w,w,w,w,
    w,w,0,w,0,0,a,a,7,7,7,8,8,w,w,w,
    w,w,0,8,8,0,a,a,7,7,7,7,7,0,w,w,
    w,0,0,c,8,0,a,a,7,7,7,7,w,7,0,w,
    0,0,0,g,c,0,a,a,7,7,7,w,7,7,0,w,
    0,0,7,7,0,0,c,a,7,7,w,7,7,7,7,0,
    w,8,7,0,0,0,c,8,0,8,7,7,7,7,7,0,
    w,8,7,0,0,g,g,0,w,0,7,7,7,7,7,0,
    w,8,7,7,7,7,w,8,0,8,c,7,7,7,7,0,
    w,8,7,7,7,w,7,7,w,g,a,c,7,7,7,0,
    w,w,8,7,w,7,7,7,7,g,a,c,c,7,0,w,
    w,w,8,w,7,7,7,7,7,g,a,a,c,c,0,w,
    w,w,w,8,7,7,7,7,7,g,g,a,a,0,w,w,
    w,w,w,w,8,8,7,7,7,g,g,0,0,w,w,w,
    w,w,w,w,w,w,8,8,0,0,0,w,w,w,w,w,
  };
  return (int *) Cd;
}
//************************
int * Windoc(void){
 static int Wind[16][16]={
 w,w,8,8,8,8,8,8,8,8,8,8,w,w,w,w,
 w,w,8,w,w,w,w,w,w,w,w,7,8,w,w,w,
 w,w,8,w,w,w,w,w,w,w,w,7,w,8,w,w,
 w,w,8,w,w,w,w,w,w,w,w,0,0,0,0,w,
 w,w,8,w,w,w,w,w,w,w,w,w,w,7,0,w,
 w,w,8,w,w,w,w,w,w,w,w,w,w,7,0,w,
 w,w,8,w,4,w,w,w,0,0,0,w,w,7,0,w,
 w,w,8,w,w,4,4,0,4,0,2,0,w,7,0,w,
 w,w,8,w,1,w,7,0,0,0,0,0,w,7,0,w,
 w,w,8,w,w,1,1,0,1,0,a,0,w,7,0,w,
 w,w,8,w,0,w,7,0,0,0,0,0,w,7,0,w,
 w,w,8,w,w,0,0,8,7,w,7,0,w,7,0,w,
 w,w,8,w,w,w,w,w,w,w,w,w,w,7,0,w,
 w,w,8,w,w,w,w,w,w,w,w,w,w,7,0,w,
 w,w,8,7,7,7,7,7,7,7,7,7,7,7,0,w,
 w,w,0,0,0,0,0,0,0,0,0,0,0,0,0,w,
 };
 return (int *) Wind;
}
//************************
int * Help(void){
  static int Hlp[16][16]={
  w,w,w,w,w,w,w,5,0,w,w,w,w,w,w,w,
  w,w,w,w,w,w,5,8,5,0,0,w,w,w,w,w,
  w,w,w,w,w,5,8,5,5,5,5,0,0,w,w,w,
  w,w,w,w,5,8,5,5,5,5,5,5,5,0,0,w,
  w,w,w,5,8,5,5,a,a,a,6,5,5,5,0,w,
  w,w,5,8,5,5,6,6,5,a,a,5,5,0,0,w,
  w,5,8,5,5,5,5,7,a,a,5,5,0,8,0,w,
  5,8,5,5,5,5,a,6,5,5,5,0,8,7,0,0,
  5,0,0,5,5,5,5,5,5,5,0,8,7,7,5,0,
  5,8,8,0,0,5,5,5,5,0,8,7,7,5,0,w,
  5,8,w,8,8,0,0,5,0,8,7,7,5,0,w,w,
  0,8,7,w,w,8,8,0,8,7,7,5,0,w,w,w,
  w,0,0,8,7,w,w,8,7,7,5,0,w,w,w,w,
  w,w,w,0,0,8,7,w,7,5,0,w,w,w,w,w,
  w,w,w,w,w,0,0,8,5,0,w,w,w,w,w,w,
  w,w,w,w,w,w,w,0,0,w,w,w,w,w,w,w,
  };
  return (int *) Hlp;
}
//************************
int * CdDrive (void){
  static int DriveCd[16][16]={
  w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
  w,w,w,w,w,w,w,w,w,8,8,8,w,w,w,w,
  w,w,w,w,w,w,w,8,8,a,a,7,8,8,w,w,
  w,w,w,w,w,w,8,c,c,a,a,7,7,7,0,w,
  w,w,w,w,w,w,8,g,c,a,a,7,7,w,0,w,
  w,w,w,w,w,8,7,g,g,8,0,8,w,7,7,0,
  w,w,w,w,w,8,7,7,g,0,w,0,7,7,7,0,
  w,w,w,w,w,8,7,7,7,8,0,8,c,7,7,0,
  w,8,8,8,8,8,8,7,7,w,7,7,a,c,8,0,
  8,w,w,w,w,w,8,7,w,7,7,7,g,8,0,w,
  8,w,7,7,7,7,7,8,8,7,7,7,0,0,0,w,
  8,w,g,2,0,0,0,0,0,0,0,0,7,8,0,w,
  8,w,7,7,w,w,w,w,w,7,7,7,7,8,0,w,
  8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,w,
  w,0,0,0,0,0,0,0,0,0,0,0,0,0,w,w,
  w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,w,
  };
  return (int *) DriveCd;
}
//************************
int * Papelera(void){
 static int Waste[16][16]={
   w,w,w,w,8,8,8,8,w,w,w,w,w,w,w,w,
   w,w,8,8,w,8,w,w,8,8,w,w,w,w,w,w,
   8,8,w,w,8,0,7,7,w,w,8,8,w,w,w,w,
   8,w,w,8,8,0,8,7,7,7,w,w,8,8,w,w,
   8,7,7,w,w,0,8,8,7,7,7,7,w,w,0,w,
   8,7,7,7,7,w,w,8,7,7,7,w,w,8,0,w,
   w,8,7,7,7,2,2,w,w,w,w,8,8,8,0,w,
   w,8,7,7,2,7,7,2,2,7,8,8,8,8,0,w,
   w,8,7,2,2,2,7,2,2,7,8,8,8,0,w,w,
   w,8,7,7,2,7,7,7,7,7,8,8,8,0,w,w,
   w,w,8,7,2,7,2,7,2,7,8,8,8,0,w,w,
   w,w,8,7,7,2,2,2,2,7,8,8,8,0,w,w,
   w,w,0,0,7,7,2,7,7,7,8,8,0,w,w,w,
   w,w,w,w,0,0,7,7,7,7,8,8,0,w,w,w,
   w,w,w,w,w,w,0,0,7,7,8,8,0,w,w,w,
   w,w,w,w,w,w,w,w,0,0,0,0,w,w,w,w,
 };
 return (int *) Waste;
}
//************************
int * Monitor(void){
 static int Mon [16][16]={
 w,w,8,8,8,8,8,8,w,w,w,w,w,w,w,w,
 8,8,7,7,7,7,7,8,8,8,8,8,w,w,w,w,
 8,w,w,w,7,7,7,7,7,8,7,7,8,8,8,w,
 8,w,0,8,8,w,7,7,7,7,7,8,8,7,7,8,
 8,w,0,1,8,8,7,w,7,7,7,7,7,7,8,0,
 8,w,0,9,9,9,1,8,7,w,8,8,8,8,8,0,
 8,w,0,9,9,c,9,1,8,7,8,8,8,8,8,0,
 8,w,0,9,c,w,c,9,1,7,8,8,8,8,8,0,
 8,w,0,9,9,a,9,9,1,7,8,8,8,8,8,0,
 8,w,1,1,9,c,c,9,1,7,8,8,8,8,8,0,
 8,8,7,7,1,9,9,9,1,7,8,8,8,8,8,0,
 w,0,0,8,7,7,1,9,1,7,8,8,8,8,0,w,
 w,w,w,0,8,8,7,1,1,7,8,8,8,0,w,w,
 w,w,w,w,w,0,0,8,7,7,8,8,8,0,w,w,
 w,w,w,w,w,w,w,0,8,8,8,8,8,w,w,w,
 w,w,w,w,w,w,w,w,w,0,0,0,w,w,w,w,
 };
 return (int *) Mon;

}
//************************
void DibujeIcono(int x,int y, int *BitMap,int NumFila,int NumColumna)
 { for(int i=0;i<NumFila;i++)
     for(int j=0;j<NumColumna;j++)
      putpixel(x+j,y+i,*(BitMap++));
 }
//************************
void RotarIcono(int x,int y, int *BitMap,int NumFila,int NumColumna)
 { for(int i=0;i<NumFila;i++)
     for(int j=0;j<NumColumna;j++)
      putpixel(x+i,y+j,*(BitMap++));
 }




